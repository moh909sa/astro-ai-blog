title	description	date	tags	image	authors
v1.6.0: "Mobile Navigation & Subposts"
This new version introduces improved mobile navigation (via sticky table of contents) and the concept of "subposts."
2025-05-21
v1.6.0
./banner.png
enscribe
Two major improvements to the reading experience
astro-erudite's v1.6.0 brings about two significant enhancements that I've been wanting to implement for quite some time! The first addresses a longstanding mobile UX issue, while the second introduces a content organization paradigm that I find interesting.

Mobile navigation
The original table of contents implementation was frankly inadequate for mobile users. While desktop users enjoyed a beautiful sticky sidebar with scroll-aware highlighting, mobile users were stuck with a basic collapsible <details>{:html} element that provided no indication of reading progress or current location within the post:

![Old TOC implementation](assets/old-toc.png)
The new mobile navigation system introduces a sticky header that sits just below the main site navigation, featuring a circular progress indicator and dynamic section display. As you scroll through a post, the progress circle fills to show how far you've read, while the text updates to reflect which section you're currently viewing. Tapping on this header expands a comprehensive table of contents that mirrors the desktop experience but in a mobile-friendly format:

![New TOC implementation (closed)](assets/new-toc-closed.png)
![New TOC implementation (open)](assets/new-toc-open.png)
This gives users the same level of navigation control as if they were on desktop, in a very intuitive and mobile-friendly format.

Subposts for hierarchical content organization
The second major feature is something I'm calling "subposts," a way to organize related content in a parent-child hierarchy within your blog. This concept came from when I was writing this travel blog post on my personal site, where I essentially wanted a "subpost" for each day of the trip since it was way too long to fit into a single post.

Instead of creating separate blog posts in a "series" (and thus clogging up your blog post listings with a bunch of smaller, tangentially-related posts), you can now automatically establish a parent-child relationship between posts by creating a folder for your main topic with an index.mdx file as your parent post, then adding additional .mdx files in the same folder as subposts. For example, this very post demonstrates the feature by containing two subposts that explore the technical implementation details of each feature. On desktop, we display a <SubpostsSidebar>{:tsx} component on the right-hand side of the page that shows a list of all the subposts alongside the parent post:
